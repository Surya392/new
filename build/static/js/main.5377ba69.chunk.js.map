{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","onChange","event","console","log","target","value","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","replace","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5377ba69.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'TextUtils'\r\n  };","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        console.log(\"Uppercase Was Clicked\" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted To UpperCase\", \"success\")\r\n    } \r\n    const handleLowClick = ()=>{\r\n        console.log(\"Lowercase Was Clicked\" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted To LowerCase\", \"success\")\r\n    } \r\n    const handleClearClick = ()=>{\r\n        console.log(\"Clear Was Clicked\" + text)\r\n        let newText ='';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\", \"success\")\r\n    } \r\n    const handleReverseClick = ()=>{\r\n        console.log(\"Clear Was Clicked\" + text)\r\n        let newText =text.split('').reverse().join('');\r\n        setText(newText)\r\n        props.showAlert(\"Text Has Been Reversed \", \"success\")\r\n    } \r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On change\")\r\n        setText(event.target.value);\r\n    }\r\n  \r\n    \r\n\r\n    const [text, setText] = useState(\"\");\r\n    // text=\"new text\" //wrong way to change the text\r\n    // setText(\"new text\") //correct way to change the text\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#1b0003'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#1b0003' }} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-outline-danger mx-2\"  onClick={handleUpClick}>Convrt To Uppercase</button>\r\n            <button className=\"btn btn-outline-danger mx-2\"  onClick={handleLowClick}>Convrt To Lowercase</button>\r\n            <button className=\"btn btn-outline-danger mx-2\"  onClick={handleReverseClick}>Reverse</button>\r\n            <button className=\"btn btn-outline-danger mx-2\"  onClick={handleClearClick}>Clear</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#1b0003'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.replace(/[ ]{2,}/gi,\" \").split(' ').length} words and {text.replace(/ /g, \"\").length} characters</p>\r\n            <p>{0.008 * text.replace(/[ ]{2,}/gi,\" \").split(\"\").length} Minutes Takes To Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter Something To Textbox Above To Preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether light mode is enable is not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n\n    })\n    setTimeout(() => {\n        setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#1b0003';\n    showAlert(\"Dark Mode Has Been Enabled\", \"success\");\n    document.title = 'TextUtils - Dark';\n    }\n  \n    else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light Mode Has Been Enabled\", \"success\");\n    document.title = 'TextUtils - Light';\n\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar/> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container my-3\">\n{/*         \n          <Switch>\n              <Route exact path=\"/about\">\n                <About />\n              </Route>\n              <Route exct path=\"/\"> */}\n                <TextForm showAlert={showAlert} heading=\"Enter The Text To Analyse Below\" mode={mode}/>\n              {/* </Route>\n          </Switch> */}\n          \n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}